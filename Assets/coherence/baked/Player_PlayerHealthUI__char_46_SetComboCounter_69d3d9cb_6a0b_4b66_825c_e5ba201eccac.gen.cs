// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using Coherence.ProtocolDef;
	using Coherence.Serializer;
	using Coherence.Brook;
	using UnityEngine;
	using Coherence.Entity;

	public struct Player_PlayerHealthUI__char_46_SetComboCounter_69d3d9cb_6a0b_4b66_825c_e5ba201eccac : IEntityCommand
	{
		public int val;

		public MessageTarget Routing => MessageTarget.AuthorityOnly;
		public uint GetComponentType() => Definition.InternalPlayer_PlayerHealthUI__char_46_SetComboCounter_69d3d9cb_6a0b_4b66_825c_e5ba201eccac;

		public Player_PlayerHealthUI__char_46_SetComboCounter_69d3d9cb_6a0b_4b66_825c_e5ba201eccac
		(
			int dataval
		)
		{
			val = dataval;
		}

		public static void Serialize(Player_PlayerHealthUI__char_46_SetComboCounter_69d3d9cb_6a0b_4b66_825c_e5ba201eccac commandData, IOutProtocolBitStream bitStream)
		{
			bitStream.WriteIntegerRange(commandData.val, 32, -2147483648);
		}

		public static Player_PlayerHealthUI__char_46_SetComboCounter_69d3d9cb_6a0b_4b66_825c_e5ba201eccac Deserialize(IInProtocolBitStream bitStream)
		{
			var dataval = bitStream.ReadIntegerRange(32, -2147483648);

			return new Player_PlayerHealthUI__char_46_SetComboCounter_69d3d9cb_6a0b_4b66_825c_e5ba201eccac
			(
				dataval
			){};
		}
	}
}
